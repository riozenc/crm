<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="crm.webapp.msg.dao.GroupMessageDAO">
	<select id="findByKey" parameterType="GroupMessageDomain"
		resultType="GroupMessageDomain" useCache="true">
		select ID,MESSAGE,FROM_ID,TO_ID,FROM_NAME,DATE,STATUS from
		GROUP_MESSAGE_INFO
		<where>
			<if test="id !=null">
				and ID = #{id}
			</if>
		</where>
	</select>
	<select id="findByWhere" parameterType="GroupMessageDomain"
		resultType="GroupMessageDomain" useCache="true">
		select ID,MESSAGE,FROM_ID,TO_ID,FROM_NAME,DATE,STATUS from
		GROUP_MESSAGE_INFO
		<where>
			<if test="id !=null">
				and ID = #{id}
			</if>
			<if test="message !=null">
				and MESSAGE = #{message}
			</if>
			<if test="fromId !=null">
				and FROM_ID = #{fromId}
			</if>
			<if test="toId !=null">
				and TO_ID = #{toId}
			</if>
			<if test="fromName !=null">
				and FROM_NAME = #{fromName}
			</if>
			<if test="date !=null">
				and DATE = #{date}
			</if>
			<if test="status !=null">
				and STATUS = #{status}
			</if>
		</where>
	</select>
	<insert id="insert" parameterType="GroupMessageDomain"
		flushCache="true">
		insert into
		GROUP_MESSAGE_INFO(ID,MESSAGE,FROM_ID,TO_ID,FROM_NAME,DATE,STATUS)
		values
		(#{id},#{message},#{fromId},#{toId},#{fromName},#{date},#{status})
	</insert>
	<update id="update" parameterType="GroupMessageDomain"
		flushCache="true">
		update GROUP_MESSAGE_INFO
		<set>
			<if test="message !=null">
				MESSAGE = #{message},
			</if>
			<if test="fromId !=null">
				FROM_ID = #{fromId},
			</if>
			<if test="toId !=null">
				TO_ID = #{toId},
			</if>
			<if test="fromName !=null">
				FROM_NAME = #{fromName},
			</if>
			<if test="date !=null">
				DATE = #{date},
			</if>
			<if test="status !=null">
				STATUS = #{status},
			</if>
		</set>
		<where>
			<if test="id !=null">
				and ID = #{id}
			</if>
		</where>
	</update>
	<delete id="delete" parameterType="GroupMessageDomain"
		flushCache="true">
		delete from GROUP_MESSAGE_INFO
		<where>
			<if test="id !=null">
				and ID = #{id}
			</if>
		</where>
	</delete>

	<update id="refreshViewTime" parameterType="Map" flushCache="true">
		update user_group_rel
		<set>
			VIEW_TIME = now()
		</set>
		<where>
			USER_ID=#{1} AND GROUP_NO=#{2}
		</where>
	</update>

	<select id="findUnReadMessage" parameterType="UserDomain"
		resultType="GroupMessageDomain" useCache="true">
		SELECT * FROM user_group_rel a LEFT JOIN group_message_info b ON
		a.GROUP_NO = b.TO_ID
		<where>
			a.VIEW_TIME &lt;= b.DATE AND a.USER_ID = #{id} AND b.FROM_ID != #{userId}
			AND a.`STATUS` =
			1 AND b.`STATUS` = 1
		</where>
	</select>
</mapper>